import { r as resolveProductionConfig, m as mergeConfigWithUserConfig } from './config-Bezki5nL.mjs';
import 'browserslist-to-esbuild';
import '@vitejs/plugin-react-swc';
import './aliases-ovUFcarU.mjs';
import 'path';
import 'read-pkg-up';
import 'node:path';
import './index-CVv0hWFI.mjs';
import 'commander';
import '@strapi/cloud-cli';
import '@strapi/utils';
import 'lodash';
import 'inquirer';
import '@strapi/core';
import 'chalk';
import 'lodash/fp';
import 'boxen';
import 'cli-table3';
import 'fs';
import 'fs-extra';
import 'crypto';
import '@strapi/typescript-utils';
import 'node:os';
import 'node:fs/promises';
import 'semver';
import 'resolve-from';
import 'execa';
import 'perf_hooks';
import 'browserslist';
import 'dotenv';
import 'esbuild-register/dist/node';
import 'node:fs';
import 'lodash/camelCase';
import 'outdent';
import 'react';
import 'react-dom/server';
import '@strapi/admin/_internal';
import 'repl';
import 'node:cluster';
import 'chokidar';
import 'os';
import '@strapi/logger';
import 'ora';
import '@strapi/data-transfer';
import 'cli-progress';
import 'typescript';

const build = async (ctx)=>{
    const config = await resolveProductionConfig(ctx);
    const finalConfig = await mergeConfigWithUserConfig(config, ctx);
    const { build: viteBuild } = await import('vite');
    ctx.logger.debug('Vite config', finalConfig);
    await viteBuild(finalConfig);
};

export { build };
//# sourceMappingURL=build-CzwYtqoc.mjs.map
