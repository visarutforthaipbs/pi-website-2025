{"version":3,"file":"watch-B1J4pygU.js","sources":["../../src/node/vite/watch.ts"],"sourcesContent":["import path from 'node:path';\nimport http from 'node:http';\nimport fs from 'node:fs/promises';\nimport type { Core } from '@strapi/types';\n\nimport { mergeConfigWithUserConfig, resolveDevelopmentConfig } from './config';\n\nimport type { BuildContext } from '../create-build-context';\n\ninterface ViteWatcher {\n  close(): Promise<void>;\n}\n\nconst HMR_DEFAULT_PORT = 5173;\n\nconst createHMRServer = () => {\n  return http.createServer(\n    // http server request handler. keeps the same with\n    // https://github.com/websockets/ws/blob/45e17acea791d865df6b255a55182e9c42e5877a/lib/websocket-server.js#L88-L96\n    (_, res) => {\n      const body = http.STATUS_CODES[426]; // Upgrade Required\n\n      res.writeHead(426, {\n        'Content-Length': body?.length ?? 0,\n        'Content-Type': 'text/plain',\n      });\n\n      res.end(body);\n    }\n  );\n};\n\nconst watch = async (ctx: BuildContext): Promise<ViteWatcher> => {\n  const hmrServer = createHMRServer();\n\n  ctx.options.hmrServer = hmrServer;\n  ctx.options.hmrClientPort = HMR_DEFAULT_PORT;\n\n  const config = await resolveDevelopmentConfig(ctx);\n  const finalConfig = await mergeConfigWithUserConfig(config, ctx);\n\n  const hmrConfig = config.server?.hmr;\n\n  // If the server used for Vite hmr is the one we've created (<> no user override)\n  if (typeof hmrConfig === 'object' && hmrConfig.server === hmrServer) {\n    // Only restart the hmr server when Strapi's server is listening\n    strapi.server.httpServer.on('listening', async () => {\n      hmrServer.listen(hmrConfig.clientPort ?? hmrConfig.port ?? HMR_DEFAULT_PORT);\n    });\n  }\n\n  ctx.logger.debug('Vite config', finalConfig);\n\n  const { createServer } = await import('vite');\n\n  const vite = await createServer(finalConfig);\n\n  const viteMiddlewares: Core.MiddlewareHandler = (koaCtx, next) => {\n    return new Promise((resolve, reject) => {\n      const prefix = ctx.basePath.replace(ctx.adminPath, '').replace(/\\/+$/, '');\n\n      const originalPath = koaCtx.path;\n      if (!koaCtx.path.startsWith(prefix)) {\n        koaCtx.path = `${prefix}${koaCtx.path}`;\n      }\n\n      vite.middlewares(koaCtx.req, koaCtx.res, (err: unknown) => {\n        if (err) {\n          reject(err);\n        } else {\n          if (!koaCtx.res.headersSent) {\n            koaCtx.path = originalPath;\n          }\n\n          resolve(next());\n        }\n      });\n    });\n  };\n\n  const serveAdmin: Core.MiddlewareHandler = async (koaCtx, next) => {\n    await next();\n\n    if (koaCtx.method !== 'HEAD' && koaCtx.method !== 'GET') {\n      return;\n    }\n\n    if (koaCtx.body != null || koaCtx.status !== 404) {\n      return;\n    }\n\n    const url = koaCtx.originalUrl;\n\n    let template = await fs.readFile(path.relative(ctx.cwd, '.strapi/client/index.html'), 'utf-8');\n    template = await vite.transformIndexHtml(url, template);\n\n    koaCtx.type = 'html';\n    koaCtx.body = template;\n  };\n\n  const adminRoute = `${ctx.adminPath}/:path*`;\n\n  ctx.strapi.server.router.get(adminRoute, serveAdmin);\n  ctx.strapi.server.router.use(adminRoute, viteMiddlewares);\n\n  return {\n    async close() {\n      await vite.close();\n\n      if (hmrServer.listening) {\n        // Manually close the hmr server\n        // /!\\ This operation MUST be done after calling .close() on the vite\n        //      instance to avoid flaky behaviors with attached clients\n        await new Promise<void>((resolve, reject) => {\n          hmrServer.close((err) => (err ? reject(err) : resolve()));\n        });\n      }\n    },\n  };\n};\n\nexport { watch };\nexport type { ViteWatcher };\n"],"names":["HMR_DEFAULT_PORT","createHMRServer","http","createServer","_","res","body","STATUS_CODES","writeHead","length","end","watch","ctx","hmrServer","options","hmrClientPort","config","resolveDevelopmentConfig","finalConfig","mergeConfigWithUserConfig","hmrConfig","server","hmr","strapi","httpServer","on","listen","clientPort","port","logger","debug","vite","viteMiddlewares","koaCtx","next","Promise","resolve","reject","prefix","basePath","replace","adminPath","originalPath","path","startsWith","middlewares","req","err","headersSent","serveAdmin","method","status","url","originalUrl","template","fs","readFile","relative","cwd","transformIndexHtml","type","adminRoute","router","get","use","close","listening"],"mappings":"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"}