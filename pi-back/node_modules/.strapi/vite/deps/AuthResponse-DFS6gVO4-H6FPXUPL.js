import {
  Page,
  login,
  require_defaultsDeep,
  require_isEqual,
  require_set,
  useTypedDispatch
} from "./chunk-SNGAK6QT.js";
import {
  require_clone,
  require_get,
  require_lib,
  require_pipe,
  require_toPath,
  require_trimEnd,
  useIntl
} from "./chunk-Y2P3SHYJ.js";
import {
  useMatch,
  useNavigate
} from "./chunk-NZJNG4T4.js";
import "./chunk-XUW2YTNL.js";
import "./chunk-TKMBRDQV.js";
import {
  require_jsx_runtime
} from "./chunk-GOQBQZHW.js";
import "./chunk-GO6TWMX3.js";
import {
  require_react
} from "./chunk-MTZNWPB2.js";
import {
  __toESM
} from "./chunk-GFT2G5UO.js";

// node_modules/@strapi/admin/dist/admin/chunks/AuthResponse-DFS6gVO4.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var React = __toESM(require_react(), 1);
var import_qs = __toESM(require_lib(), 1);
var import_trimEnd = __toESM(require_trimEnd(), 1);
var import_pipe = __toESM(require_pipe(), 1);
var import_clone = __toESM(require_clone(), 1);
var import_toPath = __toESM(require_toPath(), 1);
var import_isEqual = __toESM(require_isEqual(), 1);
var import_get = __toESM(require_get(), 1);
var import_set = __toESM(require_set(), 1);
var import_defaultsDeep = __toESM(require_defaultsDeep(), 1);
var getCookieValue = (name) => {
  let result = null;
  const cookieArray = document.cookie.split(";");
  cookieArray.forEach((cookie) => {
    const [key, value] = cookie.split("=").map((item) => item.trim());
    if (key.trim() === name) {
      result = decodeURIComponent(value);
    }
  });
  return result;
};
var deleteCookie = (name) => {
  document.cookie = name + "=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;";
};
var AuthResponse = () => {
  const match = useMatch("/auth/login/:authResponse");
  const { formatMessage } = useIntl();
  const navigate = useNavigate();
  const dispatch = useTypedDispatch();
  const redirectToOops = React.useCallback(() => {
    navigate({
      pathname: "/auth/oops",
      search: `?info=${encodeURIComponent(formatMessage({
        id: "Auth.form.button.login.providers.error",
        defaultMessage: "We cannot connect you through the selected provider."
      }))}`
    });
  }, [
    navigate,
    formatMessage
  ]);
  React.useEffect(() => {
    if ((match == null ? void 0 : match.params.authResponse) === "error") {
      redirectToOops();
    }
    if ((match == null ? void 0 : match.params.authResponse) === "success") {
      const jwtToken = getCookieValue("jwtToken");
      if (jwtToken) {
        dispatch(login({
          token: jwtToken
        }));
        deleteCookie("jwtToken");
        navigate("/auth/login");
      } else {
        redirectToOops();
      }
    }
  }, [
    dispatch,
    match,
    redirectToOops,
    navigate
  ]);
  return (0, import_jsx_runtime.jsx)(Page.Loading, {});
};
export {
  AuthResponse
};
//# sourceMappingURL=AuthResponse-DFS6gVO4-H6FPXUPL.js.map
