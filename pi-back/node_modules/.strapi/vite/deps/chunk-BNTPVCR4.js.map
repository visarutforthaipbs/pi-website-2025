{
  "version": 3,
  "sources": ["../../../@strapi/admin/ee/admin/src/hooks/useLicenseLimitNotification.ts"],
  "sourcesContent": ["/**\n *\n * useLicenseLimitNotification\n *\n */\nimport * as React from 'react';\n\nimport isNil from 'lodash/isNil';\nimport { useIntl } from 'react-intl';\nimport { useLocation } from 'react-router-dom';\n\nimport { NotificationConfig, useNotification } from '../../../../admin/src/features/Notifications';\n\nimport { useLicenseLimits } from './useLicenseLimits';\n\nconst STORAGE_KEY_PREFIX = 'strapi-notification-seat-limit';\n\nconst BILLING_STRAPI_CLOUD_URL = 'https://cloud.strapi.io/profile/billing';\nconst BILLING_SELF_HOSTED_URL = 'https://strapi.io/billing/request-seats';\n\nexport const useLicenseLimitNotification = () => {\n  const { formatMessage } = useIntl();\n  const { license, isError, isLoading } = useLicenseLimits();\n  const { toggleNotification } = useNotification();\n  const { pathname } = useLocation();\n\n  const { enforcementUserCount, permittedSeats, licenseLimitStatus, isHostedOnStrapiCloud } =\n    license ?? {};\n\n  React.useEffect(() => {\n    if (isError || isLoading) {\n      return;\n    }\n\n    const shouldDisplayNotification =\n      !isNil(permittedSeats) &&\n      !window.sessionStorage.getItem(`${STORAGE_KEY_PREFIX}-${pathname}`) &&\n      (licenseLimitStatus === 'AT_LIMIT' || licenseLimitStatus === 'OVER_LIMIT');\n\n    let notificationType: NotificationConfig['type'];\n\n    if (licenseLimitStatus === 'OVER_LIMIT') {\n      notificationType = 'danger';\n    } else if (licenseLimitStatus === 'AT_LIMIT') {\n      notificationType = 'warning';\n    }\n\n    if (shouldDisplayNotification) {\n      toggleNotification({\n        type: notificationType,\n        message: formatMessage(\n          {\n            id: 'notification.ee.warning.over-.message',\n            defaultMessage:\n              \"Add seats to {licenseLimitStatus, select, OVER_LIMIT {invite} other {re-enable}} Users. If you already did it but it's not reflected in Strapi yet, make sure to restart your app.\",\n          },\n          { licenseLimitStatus }\n        ),\n        title: formatMessage(\n          {\n            id: 'notification.ee.warning.at-seat-limit.title',\n            defaultMessage:\n              '{licenseLimitStatus, select, OVER_LIMIT {Over} other {At}} seat limit ({enforcementUserCount}/{permittedSeats})',\n          },\n          {\n            licenseLimitStatus,\n            enforcementUserCount,\n            permittedSeats,\n          }\n        ),\n        link: {\n          url: isHostedOnStrapiCloud ? BILLING_STRAPI_CLOUD_URL : BILLING_SELF_HOSTED_URL,\n          label: formatMessage(\n            {\n              id: 'notification.ee.warning.seat-limit.link',\n              defaultMessage:\n                '{isHostedOnStrapiCloud, select, true {ADD SEATS} other {CONTACT SALES}}',\n            },\n            { isHostedOnStrapiCloud }\n          ),\n        },\n        blockTransition: true,\n        onClose() {\n          window.sessionStorage.setItem(`${STORAGE_KEY_PREFIX}-${pathname}`, 'true');\n        },\n      });\n    }\n  }, [\n    toggleNotification,\n    license,\n    pathname,\n    formatMessage,\n    isLoading,\n    permittedSeats,\n    licenseLimitStatus,\n    enforcementUserCount,\n    isHostedOnStrapiCloud,\n    isError,\n  ]);\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAeA,IAAMA,qBAAqB;AAE3B,IAAMC,2BAA2B;AACjC,IAAMC,0BAA0B;IAEnBC,8BAA8B,MAAA;AACzC,QAAM,EAAEC,cAAa,IAAKC,QAAAA;AAC1B,QAAM,EAAEC,SAASC,SAASC,UAAS,IAAKC,iBAAAA;AACxC,QAAM,EAAEC,mBAAkB,IAAKC,gBAAAA;AAC/B,QAAM,EAAEC,SAAQ,IAAKC,YAAAA;AAErB,QAAM,EAAEC,sBAAsBC,gBAAgBC,oBAAoBC,sBAAqB,IACrFX,WAAW,CAAA;AAEbY,EAAMC,gBAAU,MAAA;AACd,QAAIZ,WAAWC,WAAW;AACxB;IACF;AAEA,UAAMY,4BACJ,KAACC,aAAAA,SAAMN,cAAAA,KACP,CAACO,OAAOC,eAAeC,QAAQ,GAAGxB,kBAAmB,IAAGY,QAAS,EAAC,MACjEI,uBAAuB,cAAcA,uBAAuB;AAE/D,QAAIS;AAEJ,QAAIT,uBAAuB,cAAc;AACvCS,yBAAmB;eACVT,uBAAuB,YAAY;AAC5CS,yBAAmB;IACrB;AAEA,QAAIL,2BAA2B;AAC7BV,yBAAmB;QACjBgB,MAAMD;QACNE,SAASvB,cACP;UACEwB,IAAI;UACJC,gBACE;WAEJ;UAAEb;QAAmB,CAAA;QAEvBc,OAAO1B,cACL;UACEwB,IAAI;UACJC,gBACE;WAEJ;UACEb;UACAF;UACAC;QACF,CAAA;QAEFgB,MAAM;UACJC,KAAKf,wBAAwBhB,2BAA2BC;UACxD+B,OAAO7B,cACL;YACEwB,IAAI;YACJC,gBACE;aAEJ;YAAEZ;UAAsB,CAAA;QAE5B;QACAiB,iBAAiB;QACjBC,UAAAA;AACEb,iBAAOC,eAAea,QAAQ,GAAGpC,kBAAAA,IAAsBY,QAAS,IAAG,MAAA;QACrE;MACF,CAAA;IACF;KACC;IACDF;IACAJ;IACAM;IACAR;IACAI;IACAO;IACAC;IACAF;IACAG;IACAV;EACD,CAAA;AACH;",
  "names": ["STORAGE_KEY_PREFIX", "BILLING_STRAPI_CLOUD_URL", "BILLING_SELF_HOSTED_URL", "useLicenseLimitNotification", "formatMessage", "useIntl", "license", "isError", "isLoading", "useLicenseLimits", "toggleNotification", "useNotification", "pathname", "useLocation", "enforcementUserCount", "permittedSeats", "licenseLimitStatus", "isHostedOnStrapiCloud", "React", "useEffect", "shouldDisplayNotification", "isNil", "window", "sessionStorage", "getItem", "notificationType", "type", "message", "id", "defaultMessage", "title", "link", "url", "label", "blockTransition", "onClose", "setItem"]
}
