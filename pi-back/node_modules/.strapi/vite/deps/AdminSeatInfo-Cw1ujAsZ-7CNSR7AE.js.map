{
  "version": 3,
  "sources": ["../../../@strapi/admin/ee/admin/src/pages/SettingsPage/pages/ApplicationInfoPage/components/AdminSeatInfo.tsx"],
  "sourcesContent": ["import { Flex, Tooltip, Typography, Link, Grid } from '@strapi/design-system';\nimport { ExternalLink, WarningCircle } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport { useRBAC } from '../../../../../../../../admin/src/hooks/useRBAC';\nimport { selectAdminPermissions } from '../../../../../../../../admin/src/selectors';\nimport { useLicenseLimits } from '../../../../../hooks/useLicenseLimits';\n\nconst BILLING_STRAPI_CLOUD_URL = 'https://cloud.strapi.io/profile/billing';\nconst BILLING_SELF_HOSTED_URL = 'https://strapi.io/billing/request-seats';\n\nexport const AdminSeatInfoEE = () => {\n  const { formatMessage } = useIntl();\n  const { settings } = useSelector(selectAdminPermissions);\n  const {\n    isLoading: isRBACLoading,\n    allowedActions: { canRead, canCreate, canUpdate, canDelete },\n  } = useRBAC(settings?.users ?? {});\n  const {\n    license,\n    isError,\n    isLoading: isLicenseLoading,\n  } = useLicenseLimits({\n    // TODO: this creates a waterfall which we should avoid to render earlier, but for that\n    // we will have to move away from data-fetching hooks to query functions.\n    // Short-term we could at least implement a loader, for the user to have visual feedback\n    // in case the requests take a while\n    enabled: !isRBACLoading && canRead && canCreate && canUpdate && canDelete,\n  });\n\n  const isLoading = isRBACLoading || isLicenseLoading;\n\n  if (isError || isLoading || !license) {\n    return null;\n  }\n\n  const { licenseLimitStatus, enforcementUserCount, permittedSeats, isHostedOnStrapiCloud } =\n    license;\n\n  if (!permittedSeats) {\n    return null;\n  }\n\n  return (\n    <Grid.Item col={6} s={12} direction=\"column\" alignItems=\"stretch\">\n      <Typography variant=\"sigma\" textColor=\"neutral600\">\n        {formatMessage({\n          id: 'Settings.application.admin-seats',\n          defaultMessage: 'Admin seats',\n        })}\n      </Typography>\n      <Flex gap={2}>\n        <Flex>\n          <Typography tag=\"p\">\n            {formatMessage(\n              {\n                id: 'Settings.application.ee.admin-seats.count',\n                defaultMessage: '<text>{enforcementUserCount}</text>/{permittedSeats}',\n              },\n              {\n                permittedSeats,\n                enforcementUserCount,\n                text: (chunks) =>\n                  (\n                    <Typography\n                      fontWeight=\"semiBold\"\n                      textColor={enforcementUserCount > permittedSeats ? 'danger500' : undefined}\n                    >\n                      {chunks}\n                    </Typography>\n                  ) as any,\n              }\n            )}\n          </Typography>\n        </Flex>\n        {licenseLimitStatus === 'OVER_LIMIT' && (\n          <Tooltip\n            label={formatMessage({\n              id: 'Settings.application.ee.admin-seats.at-limit-tooltip',\n              defaultMessage: 'At limit: add seats to invite more users',\n            })}\n          >\n            <WarningCircle width=\"1.4rem\" height=\"1.4rem\" fill=\"danger500\" />\n          </Tooltip>\n        )}\n      </Flex>\n      <Link\n        href={isHostedOnStrapiCloud ? BILLING_STRAPI_CLOUD_URL : BILLING_SELF_HOSTED_URL}\n        isExternal\n        endIcon={<ExternalLink />}\n      >\n        {formatMessage(\n          {\n            id: 'Settings.application.ee.admin-seats.add-seats',\n            defaultMessage:\n              '{isHostedOnStrapiCloud, select, true {Add seats} other {Contact sales}}',\n          },\n          { isHostedOnStrapiCloud }\n        )}\n      </Link>\n    </Grid.Item>\n  );\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAMA,2BAA2B;AACjC,IAAMC,0BAA0B;IAEnBC,kBAAkB,MAAA;AAC7B,QAAM,EAAEC,cAAa,IAAKC,QAAAA;AAC1B,QAAM,EAAEC,SAAQ,IAAKC,YAAYC,sBAAAA;AACjC,QAAM,EACJC,WAAWC,eACXC,gBAAgB,EAAEC,SAASC,WAAWC,WAAWC,UAAS,EAAE,IAC1DC,SAAQV,qCAAUW,UAAS,CAAA,CAAC;AAChC,QAAM,EACJC,SACAC,SACAV,WAAWW,iBAAgB,IACzBC,iBAAiB;;;;;IAKnBC,SAAS,CAACZ,iBAAiBE,WAAWC,aAAaC,aAAaC;EAClE,CAAA;AAEA,QAAMN,YAAYC,iBAAiBU;AAEnC,MAAID,WAAWV,aAAa,CAACS,SAAS;AACpC,WAAO;EACT;AAEA,QAAM,EAAEK,oBAAoBC,sBAAsBC,gBAAgBC,sBAAqB,IACrFR;AAEF,MAAI,CAACO,gBAAgB;AACnB,WAAO;EACT;AAEA,aACEE,yBAACC,KAAKC,MAAI;IAACC,KAAK;IAAGC,GAAG;IAAIC,WAAU;IAASC,YAAW;;UACtDC,wBAACC,YAAAA;QAAWC,SAAQ;QAAQC,WAAU;kBACnCjC,cAAc;UACbkC,IAAI;UACJC,gBAAgB;QAClB,CAAA;;UAEFZ,yBAACa,MAAAA;QAAKC,KAAK;;cACTP,wBAACM,MAAAA;YACC,cAAAN,wBAACC,YAAAA;cAAWO,KAAI;wBACbtC,cACC;gBACEkC,IAAI;gBACJC,gBAAgB;iBAElB;gBACEd;gBACAD;gBACAmB,MAAM,CAACC,eAEHV,wBAACC,YAAAA;kBACCU,YAAW;kBACXR,WAAWb,uBAAuBC,iBAAiB,cAAcqB;kBAEhEF,UAAAA;;cAGT,CAAA;;;UAILrB,uBAAuB,oBACtBW,wBAACa,aAAAA;YACCC,OAAO5C,cAAc;cACnBkC,IAAI;cACJC,gBAAgB;YAClB,CAAA;YAEA,cAAAL,wBAACe,cAAAA;cAAcC,OAAM;cAASC,QAAO;cAASC,MAAK;;;;;UAIzDlB,wBAACmB,MAAAA;QACCC,MAAM5B,wBAAwBzB,2BAA2BC;QACzDqD,YAAU;QACVC,aAAStB,wBAACuB,eAAAA,CAAAA,CAAAA;kBAETrD,cACC;UACEkC,IAAI;UACJC,gBACE;WAEJ;UAAEb;QAAsB,CAAA;;;;AAKlC;",
  "names": ["BILLING_STRAPI_CLOUD_URL", "BILLING_SELF_HOSTED_URL", "AdminSeatInfoEE", "formatMessage", "useIntl", "settings", "useSelector", "selectAdminPermissions", "isLoading", "isRBACLoading", "allowedActions", "canRead", "canCreate", "canUpdate", "canDelete", "useRBAC", "users", "license", "isError", "isLicenseLoading", "useLicenseLimits", "enabled", "licenseLimitStatus", "enforcementUserCount", "permittedSeats", "isHostedOnStrapiCloud", "_jsxs", "Grid", "Item", "col", "s", "direction", "alignItems", "_jsx", "Typography", "variant", "textColor", "id", "defaultMessage", "Flex", "gap", "tag", "text", "chunks", "fontWeight", "undefined", "Tooltip", "label", "WarningCircle", "width", "height", "fill", "Link", "href", "isExternal", "endIcon", "ExternalLink"]
}
