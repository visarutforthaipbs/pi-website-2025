import React from "react";
import {
  Box,
  Container,
  Heading,
  Text,
  Button,
  VStack,
  SimpleGrid,
  Badge,
  Skeleton,
  Card,
  CardBody,
  HStack,
} from "@chakra-ui/react";
import { FaCalendarAlt, FaArrowRight } from "react-icons/fa";
import { Link as RouterLink } from "react-router-dom";
import FloatingShapes from "./FloatingShapes";
import WordCloudInput from "./WordCloudInput";
import SEOHead from "./SEOHead";
import { ProjectCard, BlogCard, EventCard } from "./homeComponents";
import { useFeaturedProjects } from "../hooks/useFeaturedProjects";
import { useFeaturedBlogs } from "../hooks/useFeaturedBlogs";
import { useUpcomingEvents } from "../hooks/useUpcomingEvents";

/**
 * Home Page Component
 * Main landing page with featured projects, blogs, and events
 */
export default function Home() {
  // Custom hooks for data fetching
  const {
    projects: featuredProjects,
    loading: loadingProjects,
    votes: projectVotes,
    comments: projectComments,
  } = useFeaturedProjects();

  const { blogs: featuredBlogs, loading: loadingBlogs } = useFeaturedBlogs(3);

  const { events: upcomingEvents, loading: loadingEvents } =
    useUpcomingEvents();

  return (
    <Box>
      <SEOHead
        title="‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å"
        description="‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á‡πÑ‡∏ó‡∏¢‡∏û‡∏µ‡∏ö‡∏µ‡πÄ‡∏≠‡∏™ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏£‡∏ß‡∏°‡∏´‡∏°‡∏π‡πà ‡πÇ‡∏´‡∏ß‡∏ï‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô ‡πÅ‡∏•‡∏∞‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡πÑ‡∏ó‡∏¢"
        keywords="PI, Thai PBS, ‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏£‡πà‡∏ß‡∏°, ‡πÇ‡∏´‡∏ß‡∏ï‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô, ‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏£‡∏ß‡∏°‡∏´‡∏°‡∏π‡πà, ‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞"
        url="/"
      />

      {/* Hero Section with Word Cloud */}
      <FloatingShapes variant="hero">
        <Box
          bg="white"
          py={{ base: 16, md: 24 }}
          position="relative"
          minH={{ base: "80vh", md: "100vh" }}
          display="flex"
          alignItems="center"
        >
          {/* Large Pattern Overlay */}
          <Box
            position="absolute"
            inset={0}
            bgImage="url('/logo/pi-pattern.svg')"
            bgRepeat="no-repeat"
            bgSize="cover"
            bgPosition="center"
            opacity={0.04}
            pointerEvents="none"
            zIndex={0}
            aria-hidden="true"
          />

          <Container maxW="7xl" position="relative" zIndex={1}>
            <VStack spacing={12} textAlign="center">
              <WordCloudInput />
            </VStack>
          </Container>
        </Box>
      </FloatingShapes>

      {/* Featured Projects Section */}
      <FloatingShapes variant="section">
        <Box bg="gray.50" py={{ base: 16, md: 24 }}>
          <Container maxW="7xl">
            <VStack spacing={{ base: 12, md: 16 }}>
              <VStack spacing={6} textAlign="center" maxW="4xl">
                <Badge
                  bg="secondary.500"
                  color="white"
                  px={4}
                  py={2}
                  borderRadius="full"
                  fontSize="sm"
                  textTransform="uppercase"
                  letterSpacing="wider"
                >
                  ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÄ‡∏î‡πà‡∏ô
                </Badge>
                <Heading
                  fontSize={{ base: "3xl", md: "4xl", lg: "5xl" }}
                  fontWeight="300"
                  color="gray.800"
                  lineHeight="1.2"
                >
                  ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ{" "}
                  <Text as="span" color="primary.500" fontWeight="700">
                    ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏¢‡∏°
                  </Text>{" "}
                  <Text as="span" color="secondary.500" fontWeight="700">
                    ‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
                  </Text>
                </Heading>
                <Text
                  color="gray.600"
                  fontSize="xl"
                  maxW="3xl"
                  lineHeight="1.8"
                  fontWeight="400"
                >
                  ‡∏™‡∏≥‡∏£‡∏ß‡∏à‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å‡∏ä‡∏∏‡∏°‡∏ä‡∏ô
                  ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏ß‡∏ï‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô
                </Text>
              </VStack>

              {loadingProjects ? (
                <SimpleGrid
                  columns={{ base: 1, md: 2, lg: 3 }}
                  spacing={8}
                  w="full"
                >
                  {[...Array(3)].map((_, i) => (
                    <Card key={i} borderRadius="2xl" overflow="hidden">
                      <Skeleton height="200px" />
                      <CardBody p={6}>
                        <VStack align="start" spacing={4}>
                          <Skeleton height="24px" width="80%" />
                          <VStack align="start" spacing={2} w="full">
                            <Skeleton height="16px" width="100%" />
                            <Skeleton height="16px" width="90%" />
                            <Skeleton height="16px" width="70%" />
                          </VStack>
                          <HStack justify="space-between" w="full">
                            <Skeleton height="20px" width="60px" />
                            <Skeleton
                              height="32px"
                              width="80px"
                              borderRadius="full"
                            />
                          </HStack>
                        </VStack>
                      </CardBody>
                    </Card>
                  ))}
                </SimpleGrid>
              ) : featuredProjects.length === 0 ? (
                <VStack spacing={4} py={12}>
                  <Text fontSize="6xl" role="img" aria-label="No projects">
                    üìÅ
                  </Text>
                  <Heading size="md" color="gray.600">
                    ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏î‡πà‡∏ô
                  </Heading>
                  <Text color="gray.500" textAlign="center" maxW="md">
                    ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏ß‡∏ï‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ
                  </Text>
                </VStack>
              ) : (
                <SimpleGrid
                  columns={{ base: 1, md: 2, lg: 3 }}
                  spacing={8}
                  w="full"
                >
                  {featuredProjects.slice(0, 3).map((project) => (
                    <ProjectCard
                      key={project.id}
                      project={project}
                      votes={projectVotes[project.id] || project.votes || 0}
                      comments={projectComments[project.id] || 0}
                    />
                  ))}
                </SimpleGrid>
              )}

              <Button
                as={RouterLink}
                to="/projects"
                size="lg"
                rightIcon={<FaArrowRight />}
                colorScheme="primary"
                variant="outline"
                px={8}
                py={6}
                fontSize="lg"
                fontWeight="600"
                borderRadius="full"
                _hover={{
                  bg: "primary.500",
                  color: "white",
                  transform: "translateY(-2px)",
                  boxShadow: "lg",
                }}
                transition="all 0.3s ease"
              >
                ‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
              </Button>
            </VStack>
          </Container>
        </Box>
      </FloatingShapes>

      {/* Featured Blog Articles Section */}
      <FloatingShapes variant="section">
        <Box bg="white" py={{ base: 16, md: 24 }}>
          <Container maxW="7xl">
            <VStack spacing={{ base: 12, md: 16 }}>
              <VStack spacing={6} textAlign="center" maxW="4xl">
                <Badge
                  bg="primary.500"
                  color="white"
                  px={4}
                  py={2}
                  borderRadius="full"
                  fontSize="sm"
                  textTransform="uppercase"
                  letterSpacing="wider"
                >
                  ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡πà‡∏ô
                </Badge>
                <Heading
                  fontSize={{ base: "3xl", md: "4xl", lg: "5xl" }}
                  fontWeight="300"
                  color="gray.800"
                  lineHeight="1.2"
                >
                  ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï{" "}
                  <Text as="span" color="primary.500" fontWeight="700">
                    ‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£
                  </Text>{" "}
                  ‡πÅ‡∏•‡∏∞{" "}
                  <Text as="span" color="secondary.500" fontWeight="700">
                    ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°
                  </Text>
                </Heading>
                <Text
                  color="gray.600"
                  fontSize="xl"
                  maxW="3xl"
                  lineHeight="1.8"
                  fontWeight="400"
                >
                  ‡∏≠‡πà‡∏≤‡∏ô‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏° ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ
                  ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô PI ‡πÅ‡∏•‡∏∞‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç
                </Text>
              </VStack>

              {loadingBlogs ? (
                <SimpleGrid
                  columns={{ base: 1, md: 2, lg: 3 }}
                  spacing={8}
                  w="full"
                >
                  {[...Array(3)].map((_, i) => (
                    <Card key={i} borderRadius="2xl" overflow="hidden">
                      <Skeleton height="200px" />
                      <CardBody p={6}>
                        <VStack align="start" spacing={4}>
                          <Skeleton height="24px" width="80%" />
                          <VStack align="start" spacing={2} w="full">
                            <Skeleton height="16px" width="100%" />
                            <Skeleton height="16px" width="90%" />
                            <Skeleton height="16px" width="70%" />
                          </VStack>
                          <HStack justify="space-between" w="full">
                            <Skeleton height="20px" width="60px" />
                            <Skeleton
                              height="32px"
                              width="100px"
                              borderRadius="full"
                            />
                          </HStack>
                        </VStack>
                      </CardBody>
                    </Card>
                  ))}
                </SimpleGrid>
              ) : featuredBlogs.length === 0 ? (
                <VStack spacing={4} py={12}>
                  <Text fontSize="6xl" role="img" aria-label="No blogs">
                    üìù
                  </Text>
                  <Heading size="md" color="gray.600">
                    ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡πà‡∏ô
                  </Heading>
                  <Text color="gray.500" textAlign="center" maxW="md">
                    ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ
                  </Text>
                </VStack>
              ) : (
                <SimpleGrid
                  columns={{ base: 1, md: 2, lg: 3 }}
                  spacing={8}
                  w="full"
                >
                  {featuredBlogs.slice(0, 3).map((article) => (
                    <BlogCard key={article.id} article={article} />
                  ))}
                </SimpleGrid>
              )}

              <Button
                as={RouterLink}
                to="/blog"
                size="lg"
                rightIcon={<FaArrowRight />}
                colorScheme="primary"
                variant="outline"
                px={8}
                py={6}
                fontSize="lg"
                fontWeight="600"
                borderRadius="full"
                _hover={{
                  bg: "primary.500",
                  color: "white",
                  transform: "translateY(-2px)",
                  boxShadow: "lg",
                }}
                transition="all 0.3s ease"
              >
                ‡∏≠‡πà‡∏≤‡∏ô‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
              </Button>
            </VStack>
          </Container>
        </Box>
      </FloatingShapes>

      {/* Event Calendar Section */}
      <FloatingShapes variant="section">
        <Box bg="white" py={{ base: 16, md: 24 }}>
          <Container maxW="7xl">
            <VStack spacing={{ base: 12, md: 16 }}>
              <VStack spacing={6} textAlign="center" maxW="4xl">
                <Badge
                  bg="primary.500"
                  color="white"
                  px={4}
                  py={2}
                  borderRadius="full"
                  fontSize="sm"
                  textTransform="uppercase"
                  letterSpacing="wider"
                >
                  ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤
                </Badge>
                <Heading
                  fontSize={{ base: "3xl", md: "4xl", lg: "5xl" }}
                  fontWeight="300"
                  color="gray.800"
                  lineHeight="1.2"
                >
                  ‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô{" "}
                  <Text as="span" color="primary.500" fontWeight="700">
                    ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
                  </Text>{" "}
                  ‡πÅ‡∏•‡∏∞{" "}
                  <Text as="span" color="secondary.500" fontWeight="700">
                    ‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå
                  </Text>
                </Heading>
                <Text
                  color="gray.600"
                  fontSize="xl"
                  maxW="3xl"
                  lineHeight="1.8"
                  fontWeight="400"
                >
                  ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à
                  ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô
                </Text>
              </VStack>

              {loadingEvents ? (
                <SimpleGrid
                  columns={{ base: 1, md: 2, lg: 3 }}
                  spacing={8}
                  w="full"
                >
                  {[1, 2, 3].map((i) => (
                    <Skeleton key={i} height="300px" borderRadius="2xl" />
                  ))}
                </SimpleGrid>
              ) : upcomingEvents.length === 0 ? (
                <VStack spacing={4} py={12}>
                  <Text fontSize="6xl" role="img" aria-label="No events">
                    üìÖ
                  </Text>
                  <Heading size="md" color="gray.600">
                    ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∂‡∏á
                  </Heading>
                  <Text color="gray.500" textAlign="center" maxW="md">
                    ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà‡πÜ ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏°‡∏≤‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ
                  </Text>
                </VStack>
              ) : (
                <SimpleGrid
                  columns={{ base: 1, md: 2, lg: 3 }}
                  spacing={8}
                  w="full"
                >
                  {upcomingEvents.slice(0, 3).map((event) => (
                    <EventCard key={event.id} event={event} />
                  ))}
                </SimpleGrid>
              )}

              <Button
                as={RouterLink}
                to="/events"
                size="lg"
                colorScheme="primary"
                variant="outline"
                rightIcon={<FaCalendarAlt />}
                px={8}
                py={6}
                fontSize="md"
                fontWeight="600"
                borderRadius="full"
                _hover={{
                  bg: "primary.500",
                  color: "white",
                  transform: "translateY(-2px)",
                  boxShadow: "0 8px 25px rgba(0,0,0,0.15)",
                }}
                transition="all 0.3s ease"
              >
                ‡∏î‡∏π‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
              </Button>
            </VStack>
          </Container>
        </Box>
      </FloatingShapes>
    </Box>
  );
}
